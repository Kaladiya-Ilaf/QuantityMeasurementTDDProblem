<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="quantitymeasurement.QuantityMeasurementTest" tests="119" skipped="0" failures="0" errors="0" timestamp="2020-09-05T07:50:29" hostname="ilaf-Inspiron-15-3567" time="0.075">
  <properties/>
  <testcase name="given2Volumes_whenOfTypeLitreAndBothHasSameReference_shouldBeEqual" classname="quantitymeasurement.QuantityMeasurementTest" time="0.022"/>
  <testcase name="given2Lengths_whenOfTypeInchAndBothHasSameReference_shouldBeEqual" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Lengths_whenOfTypeCentimeterAndBothHasDifferentReference_shouldBeUnequal" classname="quantitymeasurement.QuantityMeasurementTest" time="0.001"/>
  <testcase name="given2Lenghts_when1OfTypeInchWithValue2And1OfTypeCentimeterWithValue2AndHalf_shouldAdditionInInches" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Volumes_whenOfTypeMillilitreAndBothHasValueZero_shouldBeEqual" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Lengths_whenHasSameTypesInch_shouldBeEqual" classname="quantitymeasurement.QuantityMeasurementTest" time="0.001"/>
  <testcase name="given2Weights_whenOfTypeGramsAndBothHasValueZeroAndNull_shouldBeUnequal" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Lengths_whenHasSameTypesYard_shouldBeEqual" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Weights_whenOfTypeGramAndBothHasValueZero_shouldBeEqual" classname="quantitymeasurement.QuantityMeasurementTest" time="0.001"/>
  <testcase name="given1Length_whenOfTypeYardAndHasValueNotNull_shouldReturnTrue" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Volume_whenHasSameTypesLitre_shouldBeEqual" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Volumes_whenOfTypeLitreAndBothHasValueZero_shouldBeEqual" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given1Volume_whenOfTypeLitreAndHasValueNull_shouldReturnTrue" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Volumes_whenOfTypeMillilitreAndBothHasDifferentReference_shouldBeUnequal" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given1Length_whenOfTypeCentimeterAndHasValueNotNull_shouldReturnTrue" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given1Length_whenOfTypeInchAndHasValueNotNull_shouldReturnTrue" classname="quantitymeasurement.QuantityMeasurementTest" time="0.001"/>
  <testcase name="given2Lenghts_when1OfTypeYardWithValue1And1OfTypeInchWithValue1_shouldReturnFalse" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Weights_whenOfTypeTOnneAndBothHasDifferentReference_shouldBeUnequal" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given1Volume_whenOfTypeGallonAndHasValueNotNull_shouldReturnTrue" classname="quantitymeasurement.QuantityMeasurementTest" time="0.001"/>
  <testcase name="given2Lengths_whenHasDifferentTypes_shouldBeUnequal" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Weights_when1OfTypeKilogramWithValue1And1OfTypeGramWithValue1000_shouldReturnTrue" classname="quantitymeasurement.QuantityMeasurementTest" time="0.001"/>
  <testcase name="given2Lenghts_whenBothOfTypeFeetWithValue1ForBoth_shouldAdditionInInches" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Volumes_whenOfTypeGallonAndBothHasSameReference_shouldBeEqual" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Lengths_whenOfTypeYardAndBothHasValueZeroAndNull_shouldBeUnequal" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given1Temperature_whenOfTypeCelsiusAndHasValueNotNull_shouldReturnTrue" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Volume_when1OfTypeGallonWithValue1And1OfTypeLitreWithValue3point78_shouldReturnTrue" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Weights_whenOfTypeGramAndBothHasDifferentReference_shouldBeUnequal" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Temperature_whenHasDifferentTypesCelsisus_shouldBeUnequal" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Lengths_whenOfTypeFeetAndBothHasValueZero_shouldBeEqual" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Weights_whenOfTypeKilogramAndBothHasValueZero_shouldBeEqual" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Temperature_whenOfTypeCelsiusAndBothHasValueZeroAndNull_shouldBeUnequal" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Volumes_when1OfTypeGallonWithValue1And1OfTypeLitreWithValue3point78_shouldRetrunAdditionInLitres" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Weights_when1OfTypeKilogramWithValue1000And1OfTypeTonneWithValue1_shouldReturnTrue" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given1Length_whenOfTypeInchAndHasValueNull_shouldReturnTrue" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Lengths_whenOfTypeCentimeterAndBothHasSameReference_shouldBeEqual" classname="quantitymeasurement.QuantityMeasurementTest" time="0.001"/>
  <testcase name="given2Lenghts_when1OfTypeInchWithValue36And1OfTypeYardWithValue1_shouldReturnFalse" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Temperature_whenHasSameTypesCelsius_shouldBeEqual" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Lengths_whenOfTypeFeetAndBothHasDifferentReference_shouldBeUnequal" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Lengths_whenOfTypeYardAndBothHasValueZero_shouldBeEqual" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Lengths_whenHasSameTypesCentimeter_shouldBeEqual" classname="quantitymeasurement.QuantityMeasurementTest" time="0.001"/>
  <testcase name="given2Lengths_whenOfTypeFeetAndBothHasValueZeroAndNull_shouldBeUnequal" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Lengths_whenOfTypeFeetAndBothHasValueZeroAndOne_shouldBeUnequal" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Temperature_whenOfTypeCelsiusAndBothHasDifferentReference_shouldBeUnequal" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Weights_whenHasSameTypesGrams_shouldBeEqual" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Temperature_whenOfTypeCelsiusAndBothHasValueZero_shouldBeEqual" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Weights_whenOfTypeTonnesAndBothHasValueZero_shouldBeEqual" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Weights_whenOfTypeKilogramAndBothHasDifferentReference_shouldBeUnequal" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Lenghts_when1OfTypeFeetWithValue1And1OfTypeInchWithValue2_shouldAdditionInInches" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Lengths_whenOfTypeInchAndBothHasDifferentReference_shouldBeUnequal" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2VOlumes_whenOfTypeLitreAndBothHasValueZeroAndOne_shouldBeUnequal" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given1Weight_whenOfTypeGramAndHasValueNull_shouldReturnTrue" classname="quantitymeasurement.QuantityMeasurementTest" time="0.001"/>
  <testcase name="given2Lengths_whenHasSameTypes_shouldBeEqual" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Weights_whenHasDifferentTypesKilogram_shouldBeUnequal" classname="quantitymeasurement.QuantityMeasurementTest" time="0.001"/>
  <testcase name="given2Volume_whenOfTypeLitreAndBothHasValueZeroAndNull_shouldBeUnequal" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given1Weight_whenOfTypeTonneAndHasValueNotNull_shouldReturnTrue" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Weights_whenOfTypeTonneAndBothHasSameReference_shouldBeEqual" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given1Length_whenOfTypeCenAndHasValueNull_shouldReturnTrue" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Lenghts_whenOfTypeInchesBothWithValue2_shouldAdditionInInches" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Volumes_whenOfTypeGallonAndBothHasValueZero_shouldBeEqual" classname="quantitymeasurement.QuantityMeasurementTest" time="0.001"/>
  <testcase name="given2VOlumes_whenOfTypeGallonAndBothHasValueZeroAndOne_shouldBeUnequal" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Weights_when1OfTypeGramWithValue1000And1OfTypeTonneWithValue1_shouldRetrunAdditionInKilogram" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Lengths_whenOfTypeFeetAndBothHasSameReference_shouldBeEqual" classname="quantitymeasurement.QuantityMeasurementTest" time="0.001"/>
  <testcase name="given1Volume_whenOfTypeLitreAndHasValueNotNull_shouldReturnTrue" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Lengths_whenOfTypeYardAndBothHasDifferentReference_shouldBeUnequal" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Lenghts_when1OfTypeYardWithValue1And1OfTypeFeetWithValue3_shouldReturnTrue" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Weights_whenHasSameTypesTonne_shouldBeEqual" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Lengths_whenOfTypeCentimeterAndBothHasValueZeroAndNull_shouldBeUnequal" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Lengths_whenHasDifferentTypesInchAndInteger_shouldBeUnequal" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Weights_whenHasSameTypesKilograms_shouldBeEqual" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given1Volume_whenOfTypeGallonAndHasValueNull_shouldReturnTrue" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Weights_whenOfTypeKilogramAndBothHasValueZeroAndOne_shouldBeUnequal" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Weights_whenOfTypeKilogramAndBothHasSameReference_shouldBeEqual" classname="quantitymeasurement.QuantityMeasurementTest" time="0.001"/>
  <testcase name="given2Volumes_whenHasDifferentTypesLitre_shouldBeUnequal" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Lengths_whenOfTypeCentimeterAndBothHasValueZeroAndOne_shouldBeUnequal" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Lenghts_when1OfTypeCentimeterWithValue5And1OfTypeInchWithValue2_shouldReturnFalse" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given1Weight_whenOfTypeKilogramAndHasValueNull_shouldReturnTrue" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2VOlumes_whenOfTypeMillilitreAndBothHasValueZeroAndOne_shouldBeUnequal" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Lengths_whenOfTypeInchAndBothHasValueZeroAndNull_shouldBeUnequal" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given1Length_whenOfTypeFeetAndHasValueNull_shouldReturnTrue" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Lenghts_when1OfTypeFeetWithValue3And1OfTypeYardWithValue1_shouldReturnTrue" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Volumes_whenHasDifferentTypesMillilitre_shouldBeUnequal" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Weights_whenOfTypeGramAndBothHasValueZeroAndOne_shouldBeUnequal" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Lengths_whenOfTypeYardAndBothHasSameReference_shouldBeEqual" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Weights_whenHasDifferentTypesGram_shouldBeUnequal" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Weights_whenOfTypeKillogramsAndBothHasValueZeroAndNull_shouldBeUnequal" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Temperature_whenOfTypeCelsiusAndBothHasSameReference_shouldBeEqual" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Volume_whenOfTypeMillilitreAndBothHasValueZeroAndNull_shouldBeUnequal" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given1Weight_whenOfTypeTonneAndHasValueNull_shouldReturnTrue" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given1Weight_whenOfTypeKilogramAndHasValueNotNull_shouldReturnTrue" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Volumes_when1OfTypeLitreWithValue1And1OfTypeMilliLitreWithValue1000_shouldReturnAdditionInLitres" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Lengths_whenOfTypeCentimeterAndBothHasValueZero_shouldBeEqual" classname="quantitymeasurement.QuantityMeasurementTest" time="0.001"/>
  <testcase name="given2Volume_whenHasSameTypesMillilitre_shouldBeEqual" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given1Volume_whenOfTypeMillilitreAndHasValueNotNull_shouldReturnTrue" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Lenghts_when1OfTypeInchWithValue12And1OfTypeFeetWithValue1_shouldReturnTrue" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Volumes_whenOfTypeGallonAndBothHasDifferentReference_shouldBeUnequal" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Lenghts_when1OfTypeYardWithValue1And1OfTypeFeetWithValue1_shouldReturnFalse" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Weights_whenHasDifferentTypesTonne_shouldBeUnequal" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given1Weight_whenOfTypeGramAndHasValueNotNull_shouldReturnTrue" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Lengths_whenOfTypeInchAndBothHasValueZeroAndOne_shouldBeUnequal" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given1Volume_whenOfTypeMillilitreAndHasValueNull_shouldReturnTrue" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Volume_whenHasSameTypesGallons_shouldBeEqual" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Volumes_whenOfTypeMillilitreAndBothHasSameReference_shouldBeEqual" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Lengths_whenOfTypeInchAndBothHasValueZero_shouldBeEqual" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given1Temperature_whenOfTypeCelsiusAndHasValueNull_shouldReturnTrue" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Temperature_whenOfTypeCelsiusAndBothHasValueZeroAndOne_shouldBeUnequal" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Volumes_whenHasDifferentTypesGallons_shouldBeUnequal" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given1Length_whenOfTypeYardAndHasValueNull_shouldReturnTrue" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Volumes_whenOfTypeLitreAndBothHasDifferentReference_shouldBeUnequal" classname="quantitymeasurement.QuantityMeasurementTest" time="0.001"/>
  <testcase name="given2Weights_whenOfTypeGramAndBothHasSameReference_shouldBeEqual" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Lengths_whenOfTypeYardAndBothHasValueZeroAndOne_shouldBeUnequal" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Volume_when1OfTypeLitreWithValue1And1OfTypeMillilitreWithValue1000_shouldReturnTrue" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Lengths_whenHasDifferentTypesYard_shouldBeUnequal" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Volume_whenOfTypeGallonsAndBothHasValueZeroAndNull_shouldBeUnequal" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Weights_whenOfTypeTonneAndBothHasValueZeroAndNull_shouldBeUnequal" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Lenghts_when1OfTypeInchWithValue2And1OfTypeCentimeterWithValue5_shouldReturnFalse" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given1Length_whenOfTypeFeetAndHasValueNotNull_shouldReturnTrue" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Lengths_whenHasDifferentTypesCentimeter_shouldBeUnequal" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Weights_whenOfTypeTonneAndBothHasValueZeroAndOne_shouldBeUnequal" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <testcase name="given2Lenghts_when1OfTypeYardWithValue1And1OfTypeInchWithValue36_shouldReturnFalse" classname="quantitymeasurement.QuantityMeasurementTest" time="0.0"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
